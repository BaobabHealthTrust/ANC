<style type="text/css">
  td #Unknown {
    display: none;
  }
</style>
<script type="text/javascript" language="javascript">
  <!--
  tt_cancel_show = "/patients/show/<%= @patient.id %>";
  tt_cancel_destination = "/patients/show/<%= @patient.id %>";
  var timedEvent;

  var parsedConceptName;

  //-->

  function readableMessage(){

    var conceptName = conceptHash[tstCurrentPage]
    conceptName = (parsedConceptName && parsedConceptName.length > 1) ? parsedConceptName : conceptName;
    conceptName = (conceptName.toLowerCase() == "parity")? "Number of Pregnancies" : conceptName;

    try{
     // conceptName = conceptName.charAt(0).toUpperCase() + conceptName.slice(1).toLowerCase();
      if(__$("messageBar") && !__$("messageBar").innerHTML.match(conceptName)){
        __$("messageBar").innerHTML = __$("messageBar").innerHTML.replace("Value", conceptName + " Value").replace("value", conceptName + " value").replace("a " + conceptName + " value", conceptName + " value")
      }
    }catch(ex){}

    setTimeout(function(){ readableMessage()}, 10);
  }

  function buildConceptsHash(){
    var count = 0;
    var inputArr = document.getElementsByTagName("input")
    conceptHash = {};
    for (var i = 0; i < inputArr.length; i ++){
      if (inputArr[i].name && inputArr[i].name.match("concept_name") && inputArr[i].name.match("observations")){
        conceptHash[count] = inputArr[i].value;
        count ++;
      }
    }
  }

  function transformMessages(){
    buildConceptsHash();
    setTimeout(function(){ readableMessage()}, 50);
  }

  function checkHIVTestUnknown(){
    // Asked to disable this
    return false;
    if($("new_test_result_at_current_facility").value.toLowerCase() == "not done"){

      showMessage("Patient needs to be tested now!", true);
      return true;
    }
    return false;
  }

  function checkHIVTestDate(){
    if (__$('new_test_result_at_current_facility').value == 'Positive'){
      return false;
    }
    
    var hiv_test_date_str = __$("touchscreenInput" + tstCurrentPage).value.replace(/-/g, '/');

    var hiv_test_date     = new Date(hiv_test_date_str);
    var today             = new Date("<%= (session[:datetime] ? session[:datetime].to_date : Date.today).strftime("%Y-%m-%d") %>");

    var weeks_ago = parseInt((today.getTime()- hiv_test_date.getTime())/ (1000 * 60 * 60 * 24 * 7));

    if (weeks_ago > 12){
      showMessage("Patient needs to be tested again");
      return true;
    }
          
    return false;
  }

  function unknownToNotDone(){
    __$("Unknown").innerHTML = "<span>Not Done</span>";
    __$("Unknown").onmousedown = function(){
      __$("touchscreenInput" + tstCurrentPage).value = "";
      press("Not Done");
    }
  }
  
  function getSelected(){
    var choices = "";

    if(__$('choice')){
      for(var o = 0; o < __$('choice').options.length; o++){
        if(__$('choice').options[o].selected == true){
          choices += __$('choice').options[o].innerHTML + " ";
        }
      }
    }
    
    return choices;
  }

    function initializeDate(){
    months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
    year = "<%=  (session[:datetime] ? session[:datetime].to_date : Date.today).year rescue Date.today.year%>"
    month = "<%=  (session[:datetime] ? session[:datetime].to_date : Date.today).month rescue Date.today.month%>"
    day = "<%=  (session[:datetime] ? session[:datetime].to_date : Date.today).day rescue Date.today.day%>"

    setTimeout(__$("today").onmousedown, 0);
    setTimeout(function(){
      __$("touchscreenInput" + tstCurrentPage).value = "";
    }, 3);

    var year_plus = __$("dateselector_nextYear").onmousedown
    __$("dateselector_nextYear").onmousedown = function(){
      if(parseInt(year) <= parseInt(__$("dateselector_year").value)){
      }else{
        setTimeout(year_plus, 0);
      }
    }

    var month_plus = __$("dateselector_nextMonth").onmousedown
    __$("dateselector_nextMonth").onmousedown = function(){
      if((parseInt(year) <= parseInt(__$("dateselector_year").value)) && (parseInt(month) <= parseInt(months.indexOf(__$("dateselector_month").value) + 1))){
      }else{
        setTimeout(month_plus, 0);
      }
    }

    var day_plus = __$("dateselector_nextDay").onmousedown
    __$("dateselector_nextDay").onmousedown = function(){
      if((parseInt(day) <= parseInt(__$("dateselector_day").value)) && (parseInt(year) <= parseInt(__$("dateselector_year").value)) && (parseInt(month) <= parseInt(months.indexOf(__$("dateselector_month").value) + 1))){
      }else{
        setTimeout(day_plus, 0);

      }
    }
  }
  
  //-->
</script>

<% form_tag :controller => "encounters", :action => "create" do |f| %>
  <%= hidden_field_tag "encounter[encounter_type_name]", "LAB RESULTS" %>
  <%= hidden_field_tag "encounter[patient_id]", @patient.id %>
  <%= hidden_field_tag "encounter[encounter_datetime]", DateTime.now() %>
  <%= hidden_field_tag "encounter[provider_id]", session[:user_id] %>
  <%session_date = session[:datetime] || Time.now() %>

  <% params[:update] = true %>
  <% if params[:update] %>

    <%= select_tag("choice", options_for_select(["", "HB Test Result", 
          "HIV Test Result", "Syphilis Test Result", "Urine Protein"]), 
      {
        :helpText => 'Select Available Test Results', :id => "choice", :multiple => true,       
        :tt_onLoad => "showCategory('Lab Results'); transformMessages()",
        :optional => :true
      })%>

  <% end %>

  <%= touch_text_field_tag "HB Test Result", @patient, nil,
    {:id => "hb_result",
    :helptext => "HB Test Result (grams)",
    :field_type => "number",
    :tt_pageStyleClass => "NumbersWithUnknownAndDecimal",
    :min => 2,
    :max => 16,
    :tt_onLoad => "showCategory('Lab Results'); unknownToNotDone(); parsedConceptName = 'HB Test Result';",
    :tt_onUnLoad => "parsedConceptName = '';",
    :condition => "#{ (params[:update] ? "getSelected().match(/HB\sTest\sResult/)" : "") }"
  } %>

  <%= touch_date_tag "HB Test Result Date", @patient, nil,
    {:id => "enter_date_hb1_result_given",
    :helptext => "Date HB Test Result Done",
    :tt_onLoad => "showCategory('Lab Results'); initializeDate(); parsedConceptName = 'HB Test Result Date'; ",
    :tt_onUnLoad => "parsedConceptName = '';",
    :condition => "!__$('hb_result').value.match(/Not\\sDone/)#{ (params[:update] ? 
    " && getSelected().match(/HB\sTest\sResult/)" : "") }",
    :max => "#{session[:datetime].to_date rescue Date.today}" } %>

  <%= touch_select_tag "Syphilis Test Result", @patient,
    options_for_select([["", ""], ["Positive", "Positive"], 
      ["Negative", "Negative"], ["Not Done", "Not Done"]]),
    {:id => "syphilis_result",
    :helptext => "Syphilis Test Result",
    :tt_onUnLoad => "parsedConceptName = '';",
    :tt_onLoad => "parsedConceptName = 'Syphilis Test Result'; unknownToNotDone(); showCategory('Lab Results'); ",
    :condition => "#{ (params[:update] ? "getSelected().match(/Syphilis\sTest\sResult/)" : "") }" } %>

  <%= touch_date_tag "Syphilis Test Result Date", @patient, nil,
    {:id => "enter_date_syphilis_result_given",
    :helptext => "Date Syphilis Test Result Done",
    :max => "#{session[:datetime].to_date rescue Date.today}",
    :tt_onLoad => " parsedConceptName = 'Syphilis Test Result Date'; showCategory('Lab Results');initializeDate();",
    :tt_onUnLoad => "parsedConceptName = '';",
    :condition => "__$('syphilis_result').value != 'Not Done'#{ (params[:update] ? 
    " && getSelected().match(/Syphilis\sTest\sResult/)" : "") }" } %>

  <%= touch_select_tag "URINE PROTEIN", @patient, 
    options_for_select([["", ""], ["Negative", "Negative"], ["Retrace", "Retrace"], ["+", "+"], ["++", "++"], 
      ["+++", "+++"], ["++++", "++++"], ["Not Done", "Not Done"]]),
    {:id => "enter_urine_protein",
    :helptext => "Urine Protein",
    :tt_onLoad => " parsedConceptName = 'Urine Protein'; showCategory('Lab Results');",
    :tt_onUnLoad => "parsedConceptName = '';",
    :condition => "#{ (params[:update] ? "getSelected().match(/Urine\sProtein/)" : "") }" } %>

  <%= touch_select_tag "HIV status", @patient,
    options_for_select([["", ""], ["Negative", "Negative"], ["Positive", "Positive"], ["Not Done", "Not Done"]]),
    {:id => "new_test_result_at_current_facility",
    :helptext => "HIV Test Result",
    :tt_BeforeUnload => "checkHIVTestUnknown()",
    :tt_onUnLoad => "parsedConceptName = '';",
    :tt_onLoad => "parsedConceptName = 'HIV Status'; showCategory('Lab Results'); unknownToNotDone(); ",
    :condition => "#{ (params[:update] ? "getSelected().match(/HIV\sTest\sResult/)" : "") }" } %>

  <%= touch_date_tag "HIV test date", @patient, nil,
    {:id => "enter_date_result_given",
    :helptext => "Date Result Done",
    :tt_onUnLoad => "parsedConceptName = '';",
    :tt_onLoad => " parsedConceptName = 'HIV Test date'; showCategory('Lab Results'); initializeDate();",
    :condition => "__$('new_test_result_at_current_facility').value != 'Not Done'#{ (params[:update] ? 
    " && getSelected().match(/HIV\sTest\sResult/)" : "") }",
    :tt_BeforeUnload => "checkHIVTestDate()",
    :max => "#{session[:datetime].to_date rescue Date.today}"
  } %>

  <%#= touch_select_tag "WHO Stage", @patient, options_for_select([["", ""], ["1", "1"], 
  ["2", "2"], ["3", "3"], ["4", "4"], ["Unknown", "Unknown"]]),
  {:id => "who_stage",
  :helptext => "WHO STAGE",
  :condition => "__$('new_test_result_at_current_facility').value == 'Positive'#{ (params[:update] ? 
  " && getSelected().match(/HIV\sTest\sResult/)" : "") }" } %>

  <%#= touch_select_tag "Is on CPT", @patient, options_for_select([["", ""], ["Yes", "Yes"], ["No", "No"]]),
  {:id => "on_cpt?",
  :helptext => "On CPT?",
  :condition => "__$('new_test_result_at_current_facility').value == 'Positive'#{ (params[:update] ? 
  " && getSelected().match(/HIV\sTest\sResult/)" : "") }" } %>

  <%#= touch_select_tag "ON ART", @patient, options_for_select([["", ""], ["Yes", "Yes"], ["No", "No"]]),
  {:id => "on_art",
  :helptext => "On Art?",
  :condition => "__$('new_test_result_at_current_facility').value == 'Positive'#{ (params[:update] ? 
  " && getSelected().match(/HIV\sTest\sResult/)" : "") }" } %>

  <%#= touch_select_tag "ART start date", @patient, options_for_select([
  ["", ""], ["Before this Pregnancy", "Before this Pregnancy"], 
  ["At 0-27 weeks of Pregnancy", "At 0-27 weeks of Pregnancy"],
  ["At 28+ of Pregnancy", "At 28+ of Pregnancy"]]),
  {:id => "art_start",
  :helptext => "When did Client start ART?",
  :condition => "__$('new_test_result_at_current_facility').value == 'Positive' && __$('on_art').value == 'Yes'#{ (params[:update] ? 
  " && getSelected().match(/HIV\sTest\sResult/)" : "") }" } %>

  <%= submit_tag 'Finish' %>
<% end %>
